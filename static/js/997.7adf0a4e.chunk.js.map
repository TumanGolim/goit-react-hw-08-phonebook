{"version":3,"file":"static/js/997.7adf0a4e.chunk.js","mappings":"2MAgBA,EAhBa,SAAHA,GAA0C,IAApCC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WAAYC,EAAUH,EAAVG,WACjC,OACCC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACEL,EAAKM,MAAM,IAAEN,EAAKO,gBAGpBC,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMP,EAAWF,EAAKU,GAAG,EAACL,SACzCL,EAAKW,UAAUC,cAEjBJ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMR,EAAWD,EAAKU,GAAG,EAACL,SAAC,aAG/C,ECGA,EAfiB,SAAHN,GAA0C,IAApCC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WAAYC,EAAUH,EAAVG,WACrC,OACCM,EAAAA,EAAAA,KAAAJ,EAAAA,SAAA,CAAAC,SACEL,EAAKa,KAAI,SAACC,GAAE,OACZN,EAAAA,EAAAA,KAACO,EAAI,CACJf,KAAMc,EAENb,WAAYA,EACZC,WAAYA,GAFPY,EAAGJ,GAGP,KAIN,E,2DCbMM,EAAc,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAkBlB,OAlBkBP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACnBM,MAAQ,CACP1B,MAAO,GACPC,YAAa,IACbc,EAEDY,aAAe,SAAAlC,GAAkC,IAADmC,EAAAnC,EAA9BoC,OAAUC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAClChB,EAAKiB,UAAQC,EAAAA,EAAAA,GAAC,CAAC,EACbF,EAAOD,GAEV,EAACf,EACDmB,aAAe,SAACC,GACfA,EAAEC,iBACFrB,EAAKsB,MAAMC,WAAWvB,EAAKW,OAC3BX,EAAKiB,SAAS,CACbhC,MAAO,GACPC,YAAa,IAEf,EAACc,CAAA,CAmCA,OAnCAwB,EAAAA,EAAAA,GAAA7B,EAAA,EAAA8B,IAAA,SAAAV,MACD,WACC,OACCjC,EAAAA,EAAAA,MAAA,QAAM4C,SAAUC,KAAKR,aAAanC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAK8C,UAAU,OAAM5C,SAAA,EACpBG,EAAAA,EAAAA,KAAA,SAAO0C,QAAQ,qBAAqBD,UAAU,aAAY5C,SAAC,WAG3DG,EAAAA,EAAAA,KAAA,SACC6B,KAAK,QACLc,KAAK,OACLF,UAAU,eACVvC,GAAG,qBACH0B,MAAOY,KAAKhB,MAAM1B,MAClB8C,SAAUJ,KAAKf,mBAGjB9B,EAAAA,EAAAA,MAAA,OAAK8C,UAAU,OAAM5C,SAAA,EACpBG,EAAAA,EAAAA,KAAA,SAAO0C,QAAQ,wBAAwBD,UAAU,aAAY5C,SAAC,iBAG9DG,EAAAA,EAAAA,KAAA,SACC6B,KAAK,cACLc,KAAK,OACLF,UAAU,eACVvC,GAAG,wBACH0B,MAAOY,KAAKhB,MAAMzB,YAClB6C,SAAUJ,KAAKf,mBAGjBzB,EAAAA,EAAAA,KAAA,UAAQ2C,KAAK,SAASF,UAAU,kBAAiB5C,SAAC,aAKrD,KAACW,CAAA,CArDkB,C,QAASqC,WAwD7B,IC7BA,EAxBiB,WAChB,IAAQrD,GAASsD,EAAAA,EAAAA,KAAY,SAACtB,GAAK,OAAKA,EAAMhC,IAAI,IAA1CA,KACFuD,GAAWC,EAAAA,EAAAA,MAcjB,OACCrD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCG,EAAAA,EAAAA,KAACQ,EAAc,CAAC4B,WANC,SAACa,GACnBF,GAASG,EAAAA,EAAAA,IAAcD,GACxB,IAKGzD,IAAQQ,EAAAA,EAAAA,KAACmD,EAAQ,CAAC3D,KAAMA,EAAMC,WAfd,SAACS,GACnB6C,GAASK,EAAAA,EAAAA,IAAiBlD,GAC3B,EAayDR,WAXtC,SAACQ,GACnB6C,GAASM,EAAAA,EAAAA,IAAiBnD,GAC3B,MAYD,C","sources":["components/Todo/index.jsx","components/TodoList/index.jsx","components/Forms/FormCreateTodo.jsx","pages/TodoPage.jsx"],"sourcesContent":["const Todo = ({ todo, deleteTodo, updateTodo }) => {\n\treturn (\n\t\t<>\n\t\t\t<li>\n\t\t\t\t{todo.title} {todo.description}\n\t\t\t</li>\n\n\t\t\t<button onClick={() => updateTodo(todo.id)}>\n\t\t\t\t{todo.completed.toString()}\n\t\t\t</button>\n\t\t\t<br />\n\t\t\t<button onClick={() => deleteTodo(todo.id)}>Delete</button>\n\t\t</>\n\t)\n}\n\nexport default Todo\n","import Todo from '../Todo'\n\nconst TodoList = ({ todo, deleteTodo, updateTodo }) => {\n\treturn (\n\t\t<>\n\t\t\t{todo.map((el) => (\n\t\t\t\t<Todo\n\t\t\t\t\ttodo={el}\n\t\t\t\t\tkey={el.id}\n\t\t\t\t\tdeleteTodo={deleteTodo}\n\t\t\t\t\tupdateTodo={updateTodo}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nexport default TodoList\n","import { Component } from 'react'\n\nclass FormCreateTodo extends Component {\n\tstate = {\n\t\ttitle: '',\n\t\tdescription: '',\n\t}\n\n\thandleChange = ({ target: { value, name } }) => {\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t})\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tthis.props.createTodo(this.state)\n\t\tthis.setState({\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<div className='mb-3'>\n\t\t\t\t\t<label htmlFor='exampleInputEmail1' className='form-label'>\n\t\t\t\t\t\tTitle\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tid='exampleInputEmail1'\n\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='mb-3'>\n\t\t\t\t\t<label htmlFor='exampleInputPassword1' className='form-label'>\n\t\t\t\t\t\tDescription\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='description'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tid='exampleInputPassword1'\n\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary'>\n\t\t\t\t\tCreate\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default FormCreateTodo\n","import { useDispatch, useSelector } from 'react-redux'\nimport TodoList from '../components/TodoList'\nimport { addTodoAction, removeTodoAction, updateTodoAction } from '../store/todoWithSlice/sliceTodo'\nimport FormCreateTodo from '../components/Forms/FormCreateTodo'\n\nconst TodoPage = () => {\n\tconst { todo } = useSelector((state) => state.todo)\n\tconst dispatch = useDispatch()\n\n\tconst deleteTodo = (id) => {\n\t\tdispatch(removeTodoAction(id))\n\t}\n\n\tconst updateTodo = (id) => {\n\t\tdispatch(updateTodoAction(id))\n\t}\n\n\tconst createTodo = (data) => {\n\t\tdispatch(addTodoAction(data))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FormCreateTodo createTodo={createTodo} />\n\t\t\t{todo && <TodoList todo={todo} deleteTodo={deleteTodo} updateTodo={updateTodo} />}\n\t\t</>\n\t)\n}\n\nexport default TodoPage\n"],"names":["_ref","todo","deleteTodo","updateTodo","_jsxs","_Fragment","children","title","description","_jsx","onClick","id","completed","toString","map","el","Todo","FormCreateTodo","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","handleChange","_ref$target","target","value","name","setState","_defineProperty","handleSubmit","e","preventDefault","props","createTodo","_createClass","key","onSubmit","this","className","htmlFor","type","onChange","Component","useSelector","dispatch","useDispatch","data","addTodoAction","TodoList","removeTodoAction","updateTodoAction"],"sourceRoot":""}